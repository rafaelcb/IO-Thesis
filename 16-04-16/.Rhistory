install.packages("digest")
install.packages("statnet")
library(statnet)
data("florentine")
summary(flomarriage~edges)
plot(flomarriage)
model1<-ergm(flomarriage~edges)
summary(model1)
e**1.6094
exp(1.6094)
exp(1.6094) -> x
x/(1+x)
ln(10)
log(10)
exp(log(10))
x
x
x<-exp(-1.6094)
x/(1+x)
model2 <- ergm(flomarriage ∼ edges + triangles)
model2 <- ergm(flomarriage ∼ edges + triangles)
summary(model2)
des(model2)
str(model2)
model2$estimate
model2$coef
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
tab
median(tab[,2],na.rm=TRUE)
x<-rnorm(1000)
plot(x,1:1000)
hist(x)
sort(x)
plot(sort(x))
plot(table(x))
table(x)
z<-table(x)
z<-table(x)[1:2,]
z<-table(x)[1,1]
z<-table(x)[1]
z
z<-names(table(x))
z
z<-as.numeric(names(table(x)))
z
y<-table(x)
plot(z,y)
plot(y)
plot(y,z)
y
plot(y)
line(y)
plot(z,y)
plot(y,z)
plot(y,t(z))
t(z)
z
y
y<-y[]
y<-values(y)
y<-as.numeric(y)
y
y<-as.numeric(table(x))
y
hist(z)
density(x)
density(z)
plot(density(z))
x<-seq(-3,3,0.01)
x
plot(x,pnorm(x))
plot(x,dnorm(x))
plot(x,dnorm(x),type="l")
plot(x,dnorm(x),type="l",col="blue")
plot(x,dnorm(x),type="l",col="skyblue")
plot(x,dnorm(x),type="l",col="blue")
plot(x,dnorm(x),type="l",col="blue",lwd=2)
plot(x,dnorm(x),type="l",col="blue",lwd=3)
plot(x,dnorm(x),type="l",col="blue",lwd=6)
plot(x,dnorm(x),type="l",col="blue",lwd=3)
plot(x,dnorm(x),type="l",col="blue",lwd=3,xlab=None)
plot(x,dnorm(x),type="l",col="blue",lwd=3,xlab="")
plot(x,dnorm(x),type="l",col="blue",lwd=3,xlab="",ylab="")
plot(x,dnorm(x),type="l",col="blue",lwd=3,xlab="",ylab="")
? plot
plot(x,dnorm(x),type="l",col="blue",lwd=3,xlab="",ylab="",bty="l")
plot(x,dnorm(x),type="l",col="blue",lwd=3,xlab=NULL,ylab=NULL,bty="l")
plot(x,dnorm(x),type="l",col="blue",lwd=3,xlab=NA,ylab=NULL,bty="l")
plot(x,dnorm(x),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dchi(x),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dchisq(x),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dchisq(x,2),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dchisq(x,10),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
x<-seq(-40,40,0.01)
plot(x,dchisq(x,10),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dchisq(x,100),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dchisq(x,40),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
x<-seq(-100,100,0.01)
plot(x,dchisq(x,40),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dchisq(x,50),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dpoisson(x,50),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dpois(x,50),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dpois(x,1),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
x<-seq(0,100,0.01)
plot(x,dpois(x,25),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
plot(x,dpois(x,60),type="l",col="blue",lwd=3,xlab=NA,ylab=NA,bty="l")
x<-1:2000
y <- 50 + 1000*x + rnorm(1,0,250)
plot(x,y)
z<-sample(cbind(x,y))
z<-sample(cbind(x,y),400)
z
z<-sample([x,y],400)
z<-sample(c=[x,y],400)
c=[x,y]
c=cbind[x,y]
cbind(x,y)
z<-smpl(cbind(x,y),100)
z<-sample(cbind(x,y),100)
z<-sample(2000,100)
plot(x[z],y[z])
x<-rnorm(2000,550,100)
y <- 50 + 1000*x + rnorm(1,0,250)
plot(x,y)
y <- 50 + 1000*x + rnorm(1,0,500)
plot(x,y)
y <- 50 + 1000*x + rnorm(1,0,1000)
plot(x,y)
y <- 50 + 10*x + rnorm(1,0,1000)
plot(x,y)
y <- 50 + 10*x + rnorm(1,0,100000)
plot(x,y)
y <- 50 + 10*x + rnorm(2000,0,100000)
plot(x,y)
y <- 50 + 10*x + rnorm(2000,0,10)
plot(x,y)
y <- 50 + 10*x + rnorm(2000,0,100)
plot(x,y)
y <- 50 + 10*x + rnorm(2000,0,150)
plot(x,y)
y <- 50 + 10*x + rnorm(2000,0,350)
plot(x,y)
plot(x[z],y[z])
lm(y[z]~x[z])
tab <- matrix(nrow = 50, ncol = 2)
for(i in 1:50){
model <- ergm(flomarriage ~ edges + triangles)
tab[i,] <-model$coef
}
fun <-function(x){
z<- 0.5 * x *(x - 1)
return z
}
}
fun <-function(x){
z<- 0.5 * x *(x - 1)
return z
}
fun <-function(x){
z<- 0.5 * x *(x - 1)
return z}
fun <- function(x){
z <- 0.5 * x *(x - 1)
return(z)}
fun(100)
fun(2000)
fun(10)
fun(2)
fun(0)
fun(3)
fun(5)
fun(4)
z <- 0.5 * x *(x + 1)
fun <- function(x){
z <- 0.5 * x *(x + 1)
return(z)}
fun(4)
fun(100)
fun(14)
fun(102)
fun(100000000)
fun2 <- function(x){
if(temp == NULL){temp <- 1}
if(x != 1){temp <- fun2( x - 1)}
return(temp)
}
fun2(3)
getwd()
library(xml)
setwd("~/UvA -MsC Economics/Thesis/HTMLs/16-04-16")
document <- xmlTreeParse("amsterdam_paris_2016-05-25_16-04-16")
library(XML)
setwd("~/UvA -MsC Economics/Thesis/HTMLs/16-04-16")
document <- xmlTreeParse("amsterdam_paris_2016-05-25_16-04-16")
document <- xmlTreeParse("amsterdam_paris_2016-05-25_16-04-16.htm")
document <- read.table("amsterdam_paris_2016-05-25_16-04-16.htm")
document <- read.table("paris_london_2016-05-28_16-04-16.htm")
document <- read.table("~/paris_london_2016-05-28_16-04-16.htm")
getwd()
setwd("~/UvA - MsC Economics/Thesis/HTMLs/16-04-16")
document <- read.table("~/paris_london_2016-05-28_16-04-16.htm")
document <- read.table("paris_london_2016-05-28_16-04-16.htm")
document <- xmlTreeParse("paris_london_2016-05-28_16-04-16.htm")
document <- read.table("paris_london_2016-05-28_16-04-16.htm")
rawHTML <- paste(readLines("paris_london_2016-05-28_16-04-16.htm"), collapse="\n")
rawHTML
xml <- xmltreeParse(rawHTML)
xml <- xmlTreeParse(rawHTML)
? xmlTreeParse
htmlTreeParse(rawHTML)
xmlRoot(htmlFile)
xml <- htmlTreeParse(rawHTML)
xml <- htmlTreeParse(xml)
xmlRoot(xml)
xmltop = xmlRoot(xml)
print(xmltop)[1:2]
plantcat <- xmlSApply(xmltop, function(x) xmlSApply(x, xmlValue))
plantcat
? getNodeSet
? xmlChildren
xml<-xpathSApply(xml, "//div[@class='search-result collapsed']", xmlValue)
options<-xpathSApply(xmltop, "//div[@class='search-result collapsed']", xmlValue)
print(xml)
text()
options<-xpathSApply(xmltop, "//div[@class='search-result collapsed']//text()", xmlValue)
options<-getNodes(xmltop, "//div[@class='search-result collapsed']//text()", xmlValue)
options<-xmlGetNodes(xmltop, "//div[@class='search-result collapsed']//text()", xmlValue)
options<-xmlGetNodeSet(xmltop, "//div[@class='\"search-result collapsed\"']", xmlValue)
options<-xpathApply(xmltop, "//div[@class='\"search-result collapsed\"']", xmlValue)
xmltop[1][[1]]
library(XML)
setwd("~/UvA - MsC Economics/Thesis/HTMLs/16-04-16")
rawHTML <- paste(readLines("paris_london_2016-05-28_16-04-16.htm"), collapse="\n")
xml <- htmlTreeParse(rawHTML,useInternalNodes = True)
xmltop = xmlRoot(xml)
xml <- htmlTreeParse(rawHTML,useInternalNodes = TRUE)
xmltop = xmlRoot(xml)
names(xmltop)
names(top[[2]])
names(xmltop[[2]])
nodes = getNodeSet(xmltop,
"//div[@class='\"'search-result collapsed\"])
nodes = getNodeSet(xmltop,
"//div[@class='\"search-result collapsed\"'])
adfa
dasfaf
nodes= getNodeSet(xmltop,
"//div[@class='search-result collapsed']")
nodes
lapply(nodes, function(x) xmlSApply(x, xmlValue))
x<-lapply(nodes, function(x) xmlSApply(x, xmlValue))
x[1]
nodes= getNodeSet(xmltop, "//div[@class='col-sm-18 col-md-16 col-price']")
nodes
nodes<-xpathApply(xmltop, "//div[@class='col-sm-18 col-md-16 col-price']", xmlValue)
nodes
prices <- gsub(" ", "", nodes, fixed = TRUE)
prices
prices <- gsub("[[:space:]]", "", nodes)
prices
prices <- gsub("[[:space:]]\u*", "", nodes)
companies_raw<-xpathApply(xmltop, "//div[@class='row1 company-name company-hover']", xmlValue)
companies_raw
library(XML)
setwd("~/UvA - MsC Economics/Thesis/HTMLs/16-04-16")
rawHTML <- paste(readLines("amsterdam_london_2016-05-28_16-04-16.htm"), collapse="\n")
xml <- htmlTreeParse(rawHTML,useInternalNodes = TRUE)
xmltop = xmlRoot(xml)
prices_raw<-xpathApply(xmltop, "//div[@class='col-sm-18 col-md-16 col-price']", xmlValue)
prices <- gsub("[[:space:]]", "", nodes)
prices <- gsub
xmltop = xmlRoot(xml)
companies_raw<-xpathApply(xmltop, "//div[@class='row1 company-name company-hover']", xmlValue)
companies_raw
prices
prices <- gsub("[[:space:]]", "", nodes)
prices
library(XML)
setwd("~/UvA - MsC Economics/Thesis/HTMLs/16-04-16")
rawHTML <- paste(readLines("amsterdam_london_2016-05-28_16-04-16.htm"), collapse="\n")
xml <- htmlTreeParse(rawHTML,useInternalNodes = TRUE)
xmltop = xmlRoot(xml)
prices_raw<-xpathApply(xmltop, "//div[@class='col-sm-18 col-md-16 col-price']", xmlValue)
prices <- gsub("[[:space:]]", "", nodes)
xmltop = xmlRoot(xml)
companies_raw<-xpathApply(xmltop, "//div[@class='row1 company-name company-hover']", xmlValue)
prices_raw<-xpathApply(xmltop, "//div[@class='col-sm-18 col-md-16 col-price']", xmlValue)
prices <- gsub("[[:space:]]", "", prices_raw)
prices
companies_raw<-xpathApply(xmltop, "//div[@class=' col-sm-18 col-md-20 col-companies']", xmlValue)
companies_raw
companies <- gsub("[[:space:]]", "", companies_raw)
companies
?strsplit
strsplit(companies,"Carac")
companies <- strsplit(companies,"Carac")[,1]
comapnies
companies
prices
strsplit(companies,"Carac")[,1]
strsplit(companies,"Carac")
companies <- strsplit(companies,"Carac")[[,1]]
companies_raw<-unlist(xpathApply(xmltop, "//div[@class=' col-sm-18 col-md-20 col-companies']", xmlValue))
companies <- gsub("[[:space:]]", "", companies_raw)
companies <- strsplit(companies,"Carac")[,1]
companies
strsplit(companies,"Carac")
companies <- data.frame(strsplit(companies,"Carac"))[,1]
companies
companies <- unlist(strsplit(companies,"Carac"))[,1]
companies <- unlist(strsplit(companies,"Carac"))
companies <- gsub("[[:space:]]", "", companies_raw)
companies <- unlist(strsplit(companies,"Carac"))
companies
companies <- sapply(strsplit(companies, split='Carac', fixed=TRUE), function(x) (x[2]))
companies <- sapply(strsplit(companies, split='Carac', fixed=TRUE), function(x) (x[1]))
companies <- gsub("[[:space:]]", "", companies_raw)
companies <- sapply(strsplit(companies, split='Carac', fixed=TRUE), function(x) (x[1]))
companies
prices <- gsub("[[:space:]]", "", prices_raw)
prices <- companies <- sapply(strsplit(prices, split='\u', fixed=TRUE), function(x) (x[1]))
prices <-gsub("desde","",prices)
prices
prices <- gsub("[[:space:]]", "", prices_raw)
prices <- companies <- sapply(strsplit(prices, split='\\u', fixed=TRUE), function(x) (x[1]))
prices <-gsub("desde","",prices)
prices
prices <- gsub("[[:space:]]", "", prices_raw)
prices <- sapply(strsplit(prices, split='\\u', fixed=TRUE), function(x) (x[1]))
prices <-gsub("desde","",prices)
prices
prices <- gsub("[[:space:]]", "", prices_raw)
prices <- sapply(strsplit(prices, split='\\', fixed=TRUE), function(x) (x[1]))
prices <-gsub("desde","",prices)
prices
prices <- gsub("[[:space:]]", "", prices_raw)
prices <- sapply(strsplit(prices, split="\\", fixed=TRUE), function(x) (x[1]))
prices <-gsub("desde","",prices)
prices
strsplit(prices, split="\\", fixed=TRUE)
prices <- gsub("[[:space:]]", "", prices_raw)
prices <- sapply(strsplit(prices, split="\\", fixed=\\TRUE), function(x) (x[1]))
prices <-gsub("desde","",prices)
prices <- gsub("[[:space:]]", "", prices_raw)
prices <- sapply(strsplit(prices, split="\\\\", fixed=TRUE), function(x) (x[1]))
prices <-gsub("desde","",prices)
prices
strsplit(prices, split="\\\\", fixed=TRUE)
strsplit(prices, split="\\\\")
strsplit(prices, split="\\ \\")
char(3)
? nchar
nchar("\\")
"\\"
strsplit(prices, split="\\ \\")
strsplit(prices, split=cat('\'))
cat("\\")
strsplit(prices, split=cat('\\'))
strsplit(prices, split=['\\'])
strsplit(prices, split=cat('\\'),fixed = TRUE)
strsplit(prices, split=cat('\\'),fixed = TRUE)
strsplit(prices, split=cat('\\'),fixed = FALSE)
strsplit(prices, split="[\\\\]|[^[:print:]]",fixed = TRUE)
strsplit(prices, split="[\\\\]|[^[:print:]]",fixed = FALSE)
prices <- sapply(strsplit(prices, split="[\\\\]|[^[:print:]]",fixed = FALSE), function(x) (x[1]))
prices <-gsub("desde","",prices)
prices
departure<-unlist(xpathApply(xmltop, "//div[@class=' col-sm-14 col-xs-18 col-departure']", xmlValue))
departure
departure<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-departure']", xmlValue))
departure
departure_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-departure']", xmlValue))
departure<-sub("\n","",departure_raw)
departure
departure<-sub("  ","",departure_raw)
departure
departure<-sub(" ","",departure_raw)
departure
departure_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-departure']", xmlValue))
departure<-sub("[\r\n]","",departure_raw)
departure
departure_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-departure']", xmlValue))
departure<-sub("\r?\n|\r,"",departure_raw)
departure<-gsub("\n","",departure_raw)
departure
install.packages("stringr")
library(stringr)
str_trim(departure_raw)
gsub("\n","",str_trim(departure_raw))
arrival_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-arrival']", xmlValue))
arrival<-gsub("\n","",str_trim(arrival_raw))
arrival
file<-"amsterdam_london_2016-05-28_16-04-16.htm"
additional<-rep(strsplit(file),8)
additional<-rep(strsplit(file,"_"),8)
additional
additional<-rep(strsplit(file,"_"),nrow(prices))
additional<-rep(strsplit(file,"_"),nobs(prices))
n.row(prices)
nrow(prices)
obs(prices)
size(prices)
NROW)prices
NROW(prices)
data<-cbind(additional,arrival,departure,companies,prices)
data
additional<-data.frame(rep(strsplit(file,"_"),NROW(prices)))
additional
additional<-data.frame(rep(strsplit(file,"_"),NROW(prices)))
additional
?lapply
additional<-lapply( strsplit(file,"_"),rep,NROW(prices))
additional
additional<-unlist(strsplit(file,"_"),rep,NROW(prices))
additional
additional<-unlist(strsplit(file,"_"))
from<-rep(additional[1],NROW(prices))
to<-rep(additional[2],NROW(prices))
when<-rep(additional[3],NROW(prices))
downloaded<-rep(additional[4],NROW(prices))
data<-cbind(from,to,when,arrival,departure,companies,prices,downloaded)
data
companies_raw<-unlist(xpathApply(xmltop, "//div[@class=' col-sm-18 col-md-20 col-companies']", xmlValue))
companies <- gsub("[[:space:]]", "", companies_raw)
companies <- sapply(strsplit(companies, split='Carac', fixed=TRUE), function(x) (x[1]))
departure_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-departure']", xmlValue))
departure<-gsub("\n","",str_trim(departure_raw))
arrival_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-arrival']", xmlValue))
arrival<-gsub("\n","",str_trim(arrival_raw))
additional<-unlist(strsplit(file,"_"))
from<-rep(additional[1],NROW(prices))
to<-rep(additional[2],NROW(prices))
when<-rep(additional[3],NROW(prices))
downloaded<-rep(additional[4],NROW(prices))
data<-cbind(from,to,when,arrival,departure,companies,prices,downloaded)
data
write.table(data, file = "~/UvA - MsC Economics/Thesis/HTMLs/Data.csv", append = FALSE, quote = TRUE, sep = " ",
eol = "\n", na = "NA", dec = ".", row.names = FALSE,
col.names = FALSE, qmethod = c("escape", "double"),
fileEncoding = "")
as.numeric(prices)
?as.numeric
prices <-as.numeric(gsub(",",".",prices))
xmltop = xmlRoot(xml)
companies_raw<-unlist(xpathApply(xmltop, "//div[@class=' col-sm-18 col-md-20 col-companies']", xmlValue))
companies <- gsub("[[:space:]]", "", companies_raw)
companies <- sapply(strsplit(companies, split='Carac', fixed=TRUE), function(x) (x[1]))
departure_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-departure']", xmlValue))
departure<-gsub("\n","",str_trim(departure_raw))
arrival_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-arrival']", xmlValue))
arrival<-gsub("\n","",str_trim(arrival_raw))
additional<-unlist(strsplit(file,"_"))
from<-rep(additional[1],NROW(prices))
to<-rep(additional[2],NROW(prices))
when<-rep(additional[3],NROW(prices))
downloaded<-rep(additional[4],NROW(prices))
data<-cbind(from,to,when,arrival,departure,companies,prices,downloaded)
data
as.numeric8prices
as.numeric(prices)
data<-data.frame(from,to,when,arrival,departure,companies,prices,downloaded)
data
write.csv(data, file = "~/UvA - MsC Economics/Thesis/HTMLs/Data.csv", append = FALSE, quote = TRUE,
eol = "\n", na = "NA", dec = ".", row.names = FALSE,
col.names = FALSE, qmethod = c("escape", "double"),
fileEncoding = "")
write.table(data, file = "~/UvA - MsC Economics/Thesis/HTMLs/Data.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE,
col.names = FALSE, qmethod = c("escape", "double"),
fileEncoding = "")
departure
gsub("  ","",departure)
departure_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-departure']", xmlValue))
departure<-gsub("  ","",gsub("\n","",str_trim(departure_raw)))
arrival_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-arrival']", xmlValue))
arrival<-gsub("  ","",gsub("\n","",str_trim(arrival_raw)))
additional<-unlist(strsplit(file,"_"))
from<-rep(additional[1],NROW(prices))
to<-rep(additional[2],NROW(prices))
when<-rep(additional[3],NROW(prices))
downloaded<-rep(additional[4],NROW(prices))
data<-data.frame(from,to,when,arrival,departure,companies,prices,downloaded)
data
departure<-gsub("   ","",gsub("\n","",str_trim(departure_raw)))
departure_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-departure']", xmlValue))
departure<-gsub("   ","",gsub("\n","",str_trim(departure_raw)))
arrival_raw<-unlist(xpathApply(xmltop, "//div[@class='col-sm-14 col-xs-18 col-arrival']", xmlValue))
arrival<-gsub("   ","",gsub("\n","",str_trim(arrival_raw)))
additional<-unlist(strsplit(file,"_"))
from<-rep(additional[1],NROW(prices))
to<-rep(additional[2],NROW(prices))
when<-rep(additional[3],NROW(prices))
downloaded<-rep(additional[4],NROW(prices))
data<-data.frame(from,to,when,arrival,departure,companies,prices,downloaded)
data
ls()
list.files
list.files()
library(XML)
library(stringer)
setwd("~/UvA - MsC Economics/Thesis/HTMLs")
source("parseData.R")
setwd("~/UvA - MsC Economics/Thesis/HTMLs/16-04-16")
allfiles <-list.files()
for(i in 1:NROW(allfiles){
parseData(allfiles[i])
write.table(data, file = "~/UvA - MsC Economics/Thesis/HTMLs/Data.csv", append = TRUE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = FALSE,
col.names = FALSE, qmethod = c("escape", "double"),
fileEncoding = "")
}
